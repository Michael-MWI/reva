-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Admin.Enum.DFFAttachmentType exposing (..)

import Json.Decode as Decode exposing (Decoder)


type DFFAttachmentType
    = IdCard
    | EquivalenceOrExemptionProof
    | TrainingCertificate
    | Additional


list : List DFFAttachmentType
list =
    [ IdCard, EquivalenceOrExemptionProof, TrainingCertificate, Additional ]


decoder : Decoder DFFAttachmentType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ID_CARD" ->
                        Decode.succeed IdCard

                    "EQUIVALENCE_OR_EXEMPTION_PROOF" ->
                        Decode.succeed EquivalenceOrExemptionProof

                    "TRAINING_CERTIFICATE" ->
                        Decode.succeed TrainingCertificate

                    "ADDITIONAL" ->
                        Decode.succeed Additional

                    _ ->
                        Decode.fail ("Invalid DFFAttachmentType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : DFFAttachmentType -> String
toString enum____ =
    case enum____ of
        IdCard ->
            "ID_CARD"

        EquivalenceOrExemptionProof ->
            "EQUIVALENCE_OR_EXEMPTION_PROOF"

        TrainingCertificate ->
            "TRAINING_CERTIFICATE"

        Additional ->
            "ADDITIONAL"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe DFFAttachmentType
fromString enumString____ =
    case enumString____ of
        "ID_CARD" ->
            Just IdCard

        "EQUIVALENCE_OR_EXEMPTION_PROOF" ->
            Just EquivalenceOrExemptionProof

        "TRAINING_CERTIFICATE" ->
            Just TrainingCertificate

        "ADDITIONAL" ->
            Just Additional

        _ ->
            Nothing
