// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Certification {
  id        Int                     @id
  label     String                  @db.VarChar(255)
  rncpId    String                  @unique @map("rncp_id") @db.VarChar(255)
  romes     RomesOnCertifications[]
  createdAt DateTime                @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime?               @map("updated_at") @db.Timestamptz(6)

  @@map("certification")
}

model Competency {
  codeOgr            String                @id @unique @map("code_ogr") @db.VarChar(255)
  label              String
  labeTypeCompetence String                @map("label_type_competence")
  romes              CompetenciesOnRomes[]
  isActive           Boolean               @map("is_active")
  createdAt          DateTime              @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime?             @map("updated_at") @db.Timestamptz(6)

  @@map("competency")
}

model CompetenciesOnRomes {
  competency        Competency @relation(fields: [competencyCodeOgr], references: [codeOgr])
  competencyCodeOgr String     @map("competence_code_ogr")
  rome              Rome       @relation(fields: [romeCode], references: [code])
  romeCode          String     @map("rome_code")
  createdAt         DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime?  @map("updated_at") @db.Timestamptz(6)

  @@id([competencyCodeOgr, romeCode])
  @@map("competency_rome")
}

model Rome {
  id             Int                     @id @default(autoincrement())
  code           String                  @unique @db.VarChar(255)
  label          String                  @db.VarChar(255)
  profession     Profession[]
  certifications RomesOnCertifications[]
  competences    CompetenciesOnRomes[]
  activities     ActivitiesOnRomes[]
  isActive       Boolean                 @map("is_active")
  createdAt      DateTime                @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime?               @map("updated_at") @db.Timestamptz(6)

  @@map("rome")
}

model RomesOnCertifications {
  certification   Certification @relation(fields: [certificationId], references: [id])
  certificationId Int           @map("certification_id")
  rome            Rome          @relation(fields: [romeId], references: [id])
  romeId          Int           @map("rome_id")
  createdAt       DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime?     @map("updated_at") @db.Timestamptz(6)

  @@id([certificationId, romeId])
  @@map("rome_certification")
}

model Profession {
  id     Int    @id
  label  String @db.VarChar(255)
  romeId Int    @map("rome_id")
  rome   Rome?  @relation(fields: [romeId], references: [id])

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("profession")
}

model Diagnosis {
  id             Int       @id @default(autoincrement())
  revaIdentifier String    @map("reva_identifier")
  content        Json
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("diagnosis")
}

model Activity {
  codeOgr          String              @id @unique @map("code_ogr") @db.VarChar(255)
  label            String
  labeTypeActivity String              @map("label_type_activity")
  romes            ActivitiesOnRomes[]
  createdAt        DateTime            @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime?           @map("updated_at") @db.Timestamptz(6)

  @@map("activity")
}

model ActivitiesOnRomes {
  activity        Activity  @relation(fields: [activityCodeOgr], references: [codeOgr])
  activityCodeOgr String    @map("activity_code_ogr")
  rome            Rome      @relation(fields: [romeCode], references: [code])
  romeCode        String    @map("rome_code")
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime? @map("updated_at") @db.Timestamptz(6)

  @@id([activityCodeOgr, romeCode])
  @@map("activity_rome")
}
