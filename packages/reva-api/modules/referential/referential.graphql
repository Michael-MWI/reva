type Referential {
  goals: [Goal!]!
}

type Goal {
  id: ID!
  label: String!
  order: Int!
  needsAdditionalInformation: Boolean!
  isActive: Boolean!
}

type Region {
  id: ID!
  code: String!
  label: String!
  departments: [Department!]!
}

type Department {
  id: ID!
  code: String!
  label: String!
  region: Region!
}

type Degree {
  id: ID!
  code: String!
  label: String!
  longLabel: String!
  level: Int!
}

type VulnerabilityIndicator {
  id: ID!
  label: String!
}

type DropOutReason {
  id: ID!
  label: String!
  isActive: Boolean!
}

type ReorientationReason {
  id: ID!
  label: String!
  disabled: Boolean!
}

type Domaine {
  id: ID!
  code: String!
  label: String!
}

type ConventionCollective {
  id: ID!
  code: String!
  label: String!
}

type TypeDiplome {
  id: ID!
  label: String!
}

enum CertificationStatus {
  INACTIVE
  SOON
  AVAILABLE
}

type Certification {
  id: ID!
  label: String!
  summary: String
  level: Int!
  activities: String
  activityArea: String
  accessibleJobType: String
  abilities: String
  codeRncp: String!
  status: CertificationStatus!
  typeDiplome: TypeDiplome!
  certificationAuthorityTag: String
  degree: Degree!
  domaines: [Domaine!]!
  conventionsCollectives: [ConventionCollective!]!
  availableAt: Timestamp!
  expiresAt: Timestamp!
}

type CertificationPage {
  rows: [Certification!]!
  info: PaginationInfo!
}

type BlocCompetence {
  CODE: String!
  LIBELLE: String!
  LISTE_COMPETENCES: String!
  PARSED_COMPETENCES: [String!]!
  MODALITES_EVALUATION: String
}

type FCCertification {
  ID_FICHE: ID!
  NUMERO_FICHE: String!
  BLOCS_COMPETENCES: [BlocCompetence!]!
}

type Country {
  id: UUID!
  label: String!
}

type Query {
  getReferential: Referential!
  searchCertificationsForCandidate(
    offset: Int
    limit: Int
    departmentId: UUID
    organismId: UUID
    searchText: String
    status: CertificationStatus
  ): CertificationPage!
  searchCertificationsForAdmin(
    offset: Int
    limit: Int
    searchText: String
    status: CertificationStatus
  ): CertificationPage!
  getCertification(certificationId: ID!): Certification!
  getRegions: [Region!]!
  getDepartments: [Department!]!
  getDegrees: [Degree!]!
  getVulnerabilityIndicators: [VulnerabilityIndicator!]!
  getDropOutReasons: [DropOutReason!]!
  getReorientationReasons: [ReorientationReason!]!
  getDomaines: [Domaine!]!
  getConventionCollectives: [ConventionCollective!]!
  getTypeDiplomes: [TypeDiplome!]!
  getCertificationAuthorityTags: [String!]!
  getFCCertification(rncp: ID!): FCCertification
  getCountries: [Country!]!
}

input UpdateCertificationInput {
  certificationId: ID!
  label: String!
  level: Int!
  codeRncp: String!
  typeDiplomeId: String!
  certificationAuthorityTag: String!
  domaineIds: [String!]!
  conventionCollectiveIds: [String!]!
  availableAt: Timestamp!
  expiresAt: Timestamp!
}

type Mutation {
  referential_updateCertification(
    input: UpdateCertificationInput!
  ): Certification!
  referential_replaceCertification(
    input: UpdateCertificationInput!
  ): Certification!
}
