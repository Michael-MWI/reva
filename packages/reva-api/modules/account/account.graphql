enum AccountGroup {
  admin
  organism
  certification_authority
}

type Account {
  id: UUID!
  keycloakId: String!
  email: String!
  firstname: String
  lastname: String
  certificationAuthorityId: String
  organism: Organism
}

input AccountInput {
  email: String!
  username: String!
  firstname: String
  lastname: String
  group: AccountGroup!
  organismId: UUID
}

input UpdateAccountInput {
  email: String!
  firstname: String
  lastname: String
}

type Mutation {
  account_createAccount(account: AccountInput): Account!
  account_updateAccount(
    accountId: ID!
    accountData: UpdateAccountInput!
  ): Account!
}

type AccountsPaginated {
  rows: [Account!]!
  info: PaginationInfo!
}

type Query {
  account_getAccounts(
    offset: Int
    limit: Int
    groupFilter: AccountGroup
    searchFilter: String
  ): AccountsPaginated!
  account_getAccount(id: ID!): Account
  account_getAccountForConnectedUser: Account
}
