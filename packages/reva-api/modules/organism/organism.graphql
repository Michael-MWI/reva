enum LegalStatus {
  EI
  EURL
  SARL
  SAS
  SASU
  SA
  EIRL
  ASSOCIATION_LOI_1901
  ETABLISSEMENT_PUBLIC
  FONDATION
  AUTRE
  NC
}

enum RemoteZone {
  FRANCE_METROPOLITAINE
  GUADELOUPE
  GUYANE
  MARTINIQUE
  MAYOTTE
  LA_REUNION
}

type Organism {
  id: UUID!
  label: String!
  contactAdministrativeEmail: String!
  contactAdministrativePhone: String
  website: String
  typology: OrganismTypology!
  organismOnDepartments(departmentId: UUID): [OrganismOnDepartment!]!
  isActive: Boolean!
  fermePourAbsenceOuConges: Boolean!
  informationsCommerciales: OrganismInformationsCommerciales
  maisonMereAAP: MaisonMereAAP
  managedDegrees: [OrganismOnDegree!]!
  accounts: [Account!]!
  domaines: [Domaine!]!
  conventionCollectives: [ConventionCollective!]!
  llToEarth: String
  distanceKm: Float
  isOnSite: Boolean!
  isRemote: Boolean!
  remoteZones: [RemoteZone!]!
  isHeadAgency: Boolean!
}

type OrganismOnDegree {
  id: UUID!
  organism: Organism!
  degree: Degree!
}

enum MaisonMereAAPLegalInformationDocumentsDecisionEnum {
  VALIDE
  DEMANDE_DE_PRECISION
}

input MaisonMereAAPLegalInformationDocumentsDecisionsInput {
  decision: MaisonMereAAPLegalInformationDocumentsDecisionEnum
}

type MaisonMereAAPLegalInformationDocumentsDecision {
  id: UUID!
  decision: MaisonMereAAPLegalInformationDocumentsDecisionEnum!
  internalComment: String!
  aapComment: String!
  aapUpdatedDocumentsAt: Timestamp!
  decisionTakenAt: Timestamp!
}

type MaisonMereAAPCGU {
  version: Int
  acceptedAt: Timestamp
  isLatestVersion: Boolean!
}

type MaisonMereAAP {
  id: UUID!
  raisonSociale: String!
  statutJuridique: LegalStatus!
  siret: String!
  phone: String
  typologie: OrganismTypology!
  siteWeb: String
  dateExpirationCertificationQualiopi: Timestamp
  gestionnaire: Account!
  organisms: [Organism!]!
  statutValidationInformationsJuridiquesMaisonMereAAP: StatutValidationInformationsJuridiquesMaisonMereAAP!
  maisonMereAAPOnDepartements: [MaisonMereAAPOnDepartment!]!
  maisonMereAAPOnConventionCollectives: [MaisonMereAAPOnConventionCollective!]!
  legalInformationDocumentsDecisions(
    input: MaisonMereAAPLegalInformationDocumentsDecisionsInput
  ): [MaisonMereAAPLegalInformationDocumentsDecision!]!
  createdAt: Timestamp!
  legalInformationDocuments: MaisonMereAAPLegalInformationDocuments
  cgu: MaisonMereAAPCGU!
  managerFirstname: String
  managerLastname: String
  showAccountSetup: Boolean
}

enum StatutValidationInformationsJuridiquesMaisonMereAAP {
  A_METTRE_A_JOUR
  EN_ATTENTE_DE_VERIFICATION
  A_JOUR
}

type MaisonMereAAPOnConventionCollective {
  ccn: ConventionCollective!
}

type Account {
  agences: [Organism!]!
  maisonMereAAP: MaisonMereAAP
}

type MaisonMereAAPOnDepartment {
  estSurPlace: Boolean!
  estADistance: Boolean!
  departement: Department!
}

type MaisonMereAAPOnDepartment {
  estSurPlace: Boolean!
  estADistance: Boolean!
  departement: Department!
}

type MaisonMereAAPLegalInformationDocuments {
  maisonMereAAP: MaisonMereAAP!
  managerFirstname: String!
  managerLastname: String!
  delegataire: Boolean!
  attestationURSSAFFile: File!
  justificatifIdentiteDirigeantFile: File!
  lettreDeDelegationFile: File
  justificatifIdentiteDelegataireFile: File
  createdAt: Timestamp!
}

input UpdateMaisonMereAAPLegalValidationDecisionInput {
  maisonMereAAPId: UUID!
  decision: MaisonMereAAPLegalInformationDocumentsDecisionEnum!
  internalComment: String
  aapComment: String
  aapUpdatedDocumentsAt: Timestamp!
}

type OrganismOnDepartment {
  id: UUID!
  organismId: UUID!
  departmentId: UUID!
  isRemote: Boolean!
  isOnSite: Boolean!
}

enum ConformiteNormeAccessibilite {
  CONFORME
  NON_CONFORME
  ETABLISSEMENT_NE_RECOIT_PAS_DE_PUBLIC
}

type OrganismInformationsCommerciales {
  id: UUID!
  organismId: UUID!
  nom: String
  telephone: String
  siteInternet: String
  emailContact: String
  adresseNumeroEtNomDeRue: String
  adresseInformationsComplementaires: String
  adresseCodePostal: String
  adresseVille: String
  conformeNormesAccessbilite: ConformiteNormeAccessibilite
}

type Query {
  organism_getOrganism(id: ID!): Organism
  organism_getMaisonMereAAPs(
    offset: Int
    limit: Int
    searchFilter: String
    legalValidationStatus: StatutValidationInformationsJuridiquesMaisonMereAAP
  ): MaisonMereAAPsPaginated!
  organism_getMaisonMereAAPById(maisonMereAAPId: ID!): MaisonMereAAP!
}

input UpdateOrganismInput {
  label: String!
  contactAdministrativeEmail: String!
  contactAdministrativePhone: String
  website: String
  isActive: Boolean!
}

input MaisonMereAAPOnDepartmentInput {
  departmentId: UUID!
  isOnSite: Boolean!
  isRemote: Boolean!
}

input UpdateMaisonMereAAPInput {
  zoneIntervention: [MaisonMereAAPOnDepartmentInput!]!
}

input CreateOrUpdateInformationsCommercialesInput {
  organismId: UUID!
  nom: String
  telephone: String
  siteInternet: String
  emailContact: String
  adresseNumeroEtNomDeRue: String
  adresseInformationsComplementaires: String
  adresseCodePostal: String
  adresseVille: String
  conformeNormesAccessbilite: ConformiteNormeAccessibilite
}

input DepartmentWithOrganismMethodsInput {
  departmentId: UUID!
  isOnSite: Boolean!
  isRemote: Boolean!
}

input CreateOrUpdateOrganismWithMaisonMereAAPInput {
  nom: String!
  address: String!
  adresseInformationsComplementaires: String
  zip: String!
  city: String!
  contactAdministrativeEmail: String!
  contactAdministrativePhone: String!
  website: String
  conformeNormesAccessbilite: ConformiteNormeAccessibilite!
  departmentsWithOrganismMethods: [DepartmentWithOrganismMethodsInput!]!
  firstname: String!
  lastname: String!
  email: String!
  accountId: UUID
}

input CreateAgencyInput {
  nom: String!
  address: String!
  adresseInformationsComplementaires: String
  zip: String!
  city: String!
  contactAdministrativeEmail: String!
  contactAdministrativePhone: String!
  website: String
  conformeNormesAccessbilite: ConformiteNormeAccessibilite!
}

input UpdateOrganismDegreesAndDomainesInput {
  organismId: ID!
  degreeIds: [ID!]!
  domaineIds: [ID!]!
}

type MaisonMereAAPsPaginated {
  rows: [MaisonMereAAP!]!
  info: PaginationInfo!
}

input UpdateOrganismInterventionZoneInput {
  organismId: ID!
  interventionZone: [InterventionZoneInput!]!
}

input InterventionZoneInput {
  departmentId: ID!
  isOnSite: Boolean!
  isRemote: Boolean!
}

input UpdateOrganismAccountInput {
  organismId: ID!
  accountFirstname: String!
  accountLastname: String!
  accountEmail: String!
}

input UpdateMaisonMereAccountSetupInput {
  maisonMereAAPId: ID!
  showAccountSetup: Boolean!
}

input CreateOrganimsAccountInput {
  organismId: ID!
  accountFirstname: String!
  accountLastname: String!
  accountEmail: String!
}

input UpdateOrganimsAccountAndOrganismInput {
  accountId: ID!
  organismId: ID!
  accountFirstname: String!
  accountLastname: String!
  accountEmail: String!
}

type Mutation {
  organism_updateOrganism(
    organismId: ID!
    organismData: UpdateOrganismInput!
  ): Organism!
  organism_updateOrganismWithMaisonMereAAP(
    organismId: ID!
    organismData: CreateOrUpdateOrganismWithMaisonMereAAPInput!
  ): Organism!
  organism_adminUpdateMaisonMereAAP(
    maisonMereAAPId: ID!
    maisonMereAAPData: UpdateMaisonMereAAPInput!
  ): String!
  organism_createOrUpdateInformationsCommerciales(
    informationsCommerciales: CreateOrUpdateInformationsCommercialesInput!
  ): OrganismInformationsCommerciales!
  organism_updateFermePourAbsenceOuConges(
    organismId: ID!
    fermePourAbsenceOuConges: Boolean!
  ): OrganismInformationsCommerciales!
  organism_createOrganismWithMaisonMereAAP(
    organismData: CreateOrUpdateOrganismWithMaisonMereAAPInput!
  ): String!

  organism_updateOrganismDegreesAndDomaines(
    data: UpdateOrganismDegreesAndDomainesInput!
  ): Organism

  organism_updateOrganismInterventionZone(
    data: UpdateOrganismInterventionZoneInput
  ): Organism!

  organism_updateOrganismAccount(data: UpdateOrganismAccountInput): Organism!
  organism_updateLegalInformationValidationDecision(
    data: UpdateMaisonMereAAPLegalValidationDecisionInput
  ): MaisonMereAAP!
  organism_updateOrganismOnSiteAndRemoteStatus(
    organismId: String!
    isOnSite: Boolean!
    isRemote: Boolean!
    remoteZones: [RemoteZone!]!
  ): Organism!

  organism_createAgency(data: CreateAgencyInput!): String!
  organism_acceptCgu: Boolean!
  organism_updateMaisonMereAccountSetup(
    data: UpdateMaisonMereAccountSetupInput!
  ): MaisonMereAAP
  organism_createAccount(
    maisonMereAAPId: ID!
    data: CreateOrganimsAccountInput!
  ): Account!
  organism_updateAccountAndOrganism(
    maisonMereAAPId: ID!
    data: UpdateOrganimsAccountAndOrganismInput!
  ): Account!
}
