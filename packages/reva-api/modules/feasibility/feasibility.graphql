enum FeasibilityDecision {
  PENDING
  REJECTED
  ADMISSIBLE
  INCOMPLETE
}

type Feasibility {
  id: ID!
  certificationAuthority: CertificationAuthority
  feasibilityFileSentAt: Timestamp!
  feasibilityFile: File!
  IDFile: File
  documentaryProofFile: File
  certificateOfAttendanceFile: File
  candidacy: Candidacy!
  decision: FeasibilityDecision!
  decisionComment: String
  decisionSentAt: Timestamp
}

type File {
  url: String!
  name: String!
}

type Candidacy {
  certificationAuthorities: [CertificationAuthority!]!
  feasibility: Feasibility
}

type FeasibilityCountByCategory {
  ALL: Int!
  PENDING: Int!
  REJECTED: Int!
  ADMISSIBLE: Int!
  INCOMPLETE: Int!
}

type FeasibilityPage {
  rows: [Feasibility!]!
  info: PaginationInfo!
}

enum FeasibilityCategoryFilter {
  ALL
  PENDING
  REJECTED
  ADMISSIBLE
  INCOMPLETE
}

enum FeasibilityDecisionFilter {
  PENDING
  REJECTED
  ADMISSIBLE
  INCOMPLETE
}

type Query {
  feasibilityCountByCategory(searchFilter: String): FeasibilityCountByCategory!
  feasibilities(
    offset: Int
    limit: Int
    decision: FeasibilityDecisionFilter
    searchFilter: String
  ): FeasibilityPage!
  feasibility(feasibilityId: ID!): Feasibility
}
