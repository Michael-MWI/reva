type ExamInfo {
  examResult: ExamResult
  estimatedExamDate: Timestamp
  actualExamDate: Timestamp
}

type Jury {
  id: ID!
  candidacy: Candidacy!
  dateOfSession: Timestamp!
  timeOfSession: String
  addressOfSession: String
  informationOfSession: String
  convocationFile: File
}

type Candidacy {
  examInfo: ExamInfo!
  jury: Jury
}

enum ExamResult {
  SUCCESS
  PARTIAL_SUCCESS
  PARTIAL_CERTIFICATION_SUCCESS
  FAILURE
}

input ExamInfoInput {
  examResult: ExamResult
  estimatedExamDate: Timestamp
  actualExamDate: Timestamp
}

enum JuryCategoryFilter {
  SCHEDULED
  PASSED
}

type JuryPage {
  rows: [Jury!]!
  info: PaginationInfo!
}

type JuryCountByCategory {
  SCHEDULED: Int!
  PASSED: Int!
}

type Query {
  jury_getJuries(
    offset: Int
    limit: Int
    categoryFilter: JuryCategoryFilter
    searchFilter: String
  ): JuryPage!
  jury_juryCountByCategory(searchFilter: String): JuryCountByCategory!
}

type Mutation {
  jury_updateExamInfo(candidacyId: UUID!, examInfo: ExamInfoInput!): ExamInfo!
}
