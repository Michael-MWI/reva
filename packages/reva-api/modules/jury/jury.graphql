type ExamInfo {
  examResult: ExamResult
  estimatedExamDate: Timestamp
  actualExamDate: Timestamp
}

type Jury {
  id: ID!
  dateOfSession: Timestamp!
  timeOfSession: String
  addressOfSession: String
  informationOfSession: String
  convocationFile: File
}

type Candidacy {
  examInfo: ExamInfo!
  jury: Jury
}

enum ExamResult {
  SUCCESS
  PARTIAL_SUCCESS
  PARTIAL_CERTIFICATION_SUCCESS
  FAILURE
}

input ExamInfoInput {
  examResult: ExamResult
  estimatedExamDate: Timestamp
  actualExamDate: Timestamp
}

type Mutation {
  jury_updateExamInfo(candidacyId: UUID!, examInfo: ExamInfoInput!): ExamInfo!
}
