type DematerializedFeasibilityFile {
  id: ID!
  candidacyId: ID!
  firstForeignLanguage: String
  secondForeignLanguage: String
  option: String
  blocsDeCompetences(blocDeCompetencesId: ID): [CertificationCompetenceBloc!]!
  certificationPartComplete: Boolean!
  certificationCompetenceDetails: [CertificationCompetenceDetails!]!
}

type CertificationCompetenceDetails {
  certificationCompetence: CertificationCompetence!
  text: String!
}

type Candidacy {
  dematerializedFeasibilityFile: DematerializedFeasibilityFile
}

enum CertificationCompletion {
  COMPLETE
  PARTIAL
}

input DematerializedFeasibilityFileCreateOrUpdateCertificationInfoInput {
  candidacyId: String!
  firstForeignLanguage: String
  secondForeignLanguage: String
  option: String
  blocDeCompetencesIds: [String!]!
  completion: CertificationCompletion!
}

input DematerializedFeasibilityFileCreateOrUpdateCertificationCompetenceDetailsInput {
  candidacyId: ID!
  dematerializedFeasibilityFileId: ID!
  competenceIdAndTexts: [CompetenceIdAndText!]!
}

input CompetenceIdAndText {
  competenceId: ID!
  text: String!
}

type Mutation {
  dematerialized_feasibility_file_createOrUpdateCertificationInfo(
    input: DematerializedFeasibilityFileCreateOrUpdateCertificationInfoInput!
  ): DematerializedFeasibilityFile!

  dematerialized_feasibility_file_createOrupdateCertificationCompetenceDetails(
    input: DematerializedFeasibilityFileCreateOrUpdateCertificationCompetenceDetailsInput!
  ): DematerializedFeasibilityFile!
}
