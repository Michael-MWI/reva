type FundingRequestUnifvae {
  id: UUID!
  candidateFirstname: String!
  candidateSecondname: String
  candidateThirdname: String
  candidateLastname: String!
  candidateGender: Gender!
  isPartialCertification: Boolean!
  individualHourCount: Decimal!
  individualCost: Decimal!
  collectiveHourCount: Decimal!
  collectiveCost: Decimal!
  basicSkills: [BasicSkill!]!
  basicSkillsHourCount: Decimal!
  basicSkillsCost: Decimal!
  mandatoryTrainings: [Training!]!
  mandatoryTrainingsHourCount: Decimal!
  mandatoryTrainingsCost: Decimal!
  certificateSkills: String!
  certificateSkillsHourCount: Decimal!
  certificateSkillsCost: Decimal!
  otherTraining: String!
  otherTrainingHourCount: Decimal!
  otherTrainingCost: Decimal!
}

input FundingRequestUnifvaeInput {
  candidateFirstname: String!
  candidateSecondname: String
  candidateThirdname: String
  candidateLastname: String!
  candidateGender: Gender!
  individualHourCount: Decimal!
  individualCost: Decimal!
  collectiveHourCount: Decimal!
  collectiveCost: Decimal!
  basicSkillsHourCount: Decimal!
  basicSkillsCost: Decimal!
  mandatoryTrainingsHourCount: Decimal!
  mandatoryTrainingsCost: Decimal!
  certificateSkillsHourCount: Decimal!
  certificateSkillsCost: Decimal!
  otherTrainingHourCount: Decimal!
  otherTrainingCost: Decimal!
}

type Query {
  candidacy_getFundingRequestUnifvae(candidacyId: UUID!): FundingRequestUnifvae!
}

type Mutation {
  candidacy_createFundingRequestUnifvae(
    candidacyId: UUID!
    fundingRequest: FundingRequestUnifvaeInput!
  ): FundingRequestUnifvae!
}
